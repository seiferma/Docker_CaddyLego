name: Docker

on:
  push:
    branches: '*'
    tags: '*'
  pull_request:

env:
  IMAGE_NAME: caddy-lego

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup buildx
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name cross-builder --platform linux/arm64,linux/amd64

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker buildx build --builder cross-builder --platform linux/amd64,linux/arm64 --progress=plain --file Dockerfile .
          fi

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        run: echo "${{ secrets.QUAY_TOKEN }}" | docker login quay.io -u seiferma+github --password-stdin

      - name: Setup buildx
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name cross-builder --platform linux/arm64,linux/amd64

      - name: Push image
        run: |
          IMAGE_ID=quay.io/seiferma/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx build --builder cross-builder --platform linux/amd64,linux/arm64 --progress=plain --file Dockerfile --tag $IMAGE_ID:$VERSION --push .


